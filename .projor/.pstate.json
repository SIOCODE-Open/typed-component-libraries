{
  "generatedSource": [
    {
      "filename": "packages/comp-product-badge/package.json",
      "content": "{\n    \"name\": \"comp-product-badge\",\n    \"description\": \"Badge component for the Product interface\",\n    \"version\": \"0.0.1\",\n    \"private\": true,\n    \"main\": \"src/index.tsx\",\n    \"dependencies\": {\n        \"react\": \"*\",\n        \"classnames\": \"*\"\n    }\n}\n",
      "contentHash": "c59e1c9670e9659e691641d182a04505c315121e996cf1b8337c1063c6df1120",
      "noWriteIfExists": false
    },
    {
      "filename": "packages/comp-product-badge/src/index.tsx",
      "content": "import classNames from \"classnames\";\n\n/** The field names available to be shown in the badge */\nexport type ProductBadgeField =\n    | \"sku\"\n    | \"name\"\n    | \"description\"\n    | \"price\"\n    | \"isAvailable\";\n\n/** Props for the ProductBadge component */\nexport interface IProductBadgeProps {\n    /** A product that is sold in a webshop */\n    value: {\n        /** The stock keeping unit */\n        sku: string;\n        /** The name of the product */\n        name: string;\n        /** A description of the product */\n        description: string;\n        /** The price of the product */\n        price: number;\n        /** Whether the product is available */\n        isAvailable: boolean;\n    };\n\n    /** The field to show in the badge */\n    field: ProductBadgeField;\n\n    /** Whether the badge should be styled as a danger badge (red) */\n    danger?: boolean;\n\n    /** Whether the badge should be styled as a warning badge (yellow) */\n    warning?: boolean;\n\n    /** Whether the badge should be styled as an info badge (blue) */\n    info?: boolean;\n}\n\n/** The capitalized names of the fields */\nconst PRODUCT_BADGE_FIELD_NAMES = {\n    sku: \"Sku\",\n    name: \"Name\",\n    description: \"Description\",\n    price: \"Price\",\n    isAvailable: \"Is Available\",\n};\n\n/** Shows a Product badge */\nexport function ProductBadge(props: IProductBadgeProps) {\n    const valueClassname = classNames(\"text-white px-2 py-1 rounded-r-lg\", {\n        \"bg-red-500\": props.danger,\n        \"bg-yellow-500\": props.warning,\n        \"bg-blue-500\": props.info,\n        \"bg-green-500\": !props.danger && !props.warning && !props.info,\n    });\n    return (\n        <div className=\"flex flex-row justify-start items-center\">\n            <div className=\"bg-gray-600 text-white px-2 py-1 rounded-l-lg\">\n                {PRODUCT_BADGE_FIELD_NAMES[props.field]}\n            </div>\n            <div className={valueClassname}>{props.value[props.field]}</div>\n        </div>\n    );\n}\n",
      "contentHash": "d7ed8caeb722a6f626e7be2b2d8d0bb34f20cacfb0c477b253c881094fae5ba2",
      "noWriteIfExists": false
    },
    {
      "filename": "packages/comp-product-badge/tsconfig.json",
      "content": "{\n    \"compilerOptions\": {\n        \"target\": \"ES2015\",\n        \"module\": \"ES2015\",\n        \"moduleResolution\": \"Node\",\n        \"allowSyntheticDefaultImports\": true,\n        \"skipLibCheck\": true,\n        \"jsx\": \"react-native\"\n    },\n    \"include\": [\"src/**/*.ts\", \"src/**/*.tsx\"],\n    \"exclude\": [\"node_modules\"]\n}\n",
      "contentHash": "91e80d67ff0c29efbce5dbea5b8c2fe9fca64ce0ba26f76314561b042e329869",
      "noWriteIfExists": false
    },
    {
      "filename": "packages/component-library/package.json",
      "content": "{\n    \"name\": \"component-library\",\n    \"version\": \"0.0.1\",\n    \"private\": true,\n    \"main\": \"src/index.tsx\",\n    \"dependencies\": {\n        \"comp-product-badge\": \"*\",\n        \"react\": \"*\"\n    },\n    \"devDependencies\": {\n        \"typescript\": \"*\"\n    }\n}\n",
      "contentHash": "390eef82ba31f71b3bb6d633a335737ac7c7e6a66379fd4b02032700c13895e0",
      "noWriteIfExists": false
    },
    {
      "filename": "packages/component-library/src/index.tsx",
      "content": "export * from \"comp-product-badge\";\n",
      "contentHash": "393d3091c4ef9e1c64ecc10ae8ed89cc38f5be0cbb98a6fc71d320cb060a9a96",
      "noWriteIfExists": false
    }
  ]
}