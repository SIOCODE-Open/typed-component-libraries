{
    "forEach": "interfaces",
    "filename": "packages/demo/src/{{kebabCase name}}-table-demo.tsx",
    "formatUsing": "typescript"
}
---
import {
    useState,
    useEffect
} from "react";
import {
    I{{pascalCase name}}DataTableProps,
    {{pascalCase name}}DataTableColumn,
    {{constantCase name}}_DATA_TABLE_COLUMN_NAMES,
    {{pascalCase name}}DataTable,
} from "component-library";

const {{constantCase name}}_DATA_TABLE_COLUMNS_LIST = Object.keys({{constantCase name}}_DATA_TABLE_COLUMN_NAMES) as Array<{{pascalCase name}}DataTableColumn>;

const {{constantCase name}}_DEFAULT_ARRAY = [
    {
    {{#each fields}}
        {{camelCase name}}: {{{type.tsDefault}}},
    {{/each}}
    }
];

export function {{pascalCase name}}DataTableDemo() {
    const [demoColumns, setDemoColumns] = useState<Array<{{pascalCase name}}DataTableColumn>>(
        {{constantCase name}}_DATA_TABLE_COLUMNS_LIST
    );
    const [demoDataJson, setDemoDataJson] = useState<string>(
        JSON.stringify({{constantCase name}}_DEFAULT_ARRAY, null, 2)
    );
    const [demoDataArray, setDemoDataArray] = useState<Array<any>>(
        {{constantCase name}}_DEFAULT_ARRAY
    );

    // Try to update the demo data array when the JSON changes
    useEffect(
        () => {
            try {
                setDemoDataArray(JSON.parse(demoDataJson));
            } catch (error) {
                console.error(error);
            }
        },
        [demoDataJson]
    );

    return <div className="flex flex-col justify-start items-center gap-2">

        <p className="text-gray-600">Update demo data below</p>
        <textarea rows={10} cols={40} value={demoDataJson} onChange={(e) => setDemoDataJson(e.target.value)}
            className="border border-gray-300 rounded-lg p-2 font-mono"
            placeholder="Enter an array of objects here"
        />

        <p className="text-gray-600">Select columns to show</p>
        <select multiple={true} value={demoColumns} onChange={(e) => setDemoColumns(Array.from(e.target.selectedOptions, (option) => option.value as {{pascalCase name}}DataTableColumn))}>
            {{#each fields}}
            <option value="{{camelCase name}}">{{capitalCase name}}</option>
            {{/each}}
        </select>

        <{{pascalCase name}}DataTable
            value={demoDataArray}
            columns={demoColumns}
        />

    </div>;
}
