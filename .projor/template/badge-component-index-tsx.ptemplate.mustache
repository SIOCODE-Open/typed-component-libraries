{
    "forEach": "interfaces",
    "filename": "packages/comp-{{kebabCase name}}-badge/src/index.tsx",
    "formatUsing": "typescript"
}
---
import classNames from "classnames";

/** The field names available to be shown in the badge */
export type {{pascalCase name}}BadgeField = {{#each fields}}"{{camelCase name}}"{{#unless @last}} | {{/unless}}{{/each}};

/** Props for the {{pascalCase name}}Badge component */
export interface I{{pascalCase name}}BadgeProps {
    /** {{{description}}} */
    value: {
        {{#each fields}}
        /** {{{description}}} */
        {{camelCase name}}: {{type.ts}};
        {{/each}}
    };

    /** The field to show in the badge */
    field: {{pascalCase name}}BadgeField;

    /** Whether the badge should be styled as a danger badge (red) */
    danger?: boolean;

    /** Whether the badge should be styled as a warning badge (yellow) */
    warning?: boolean;

    /** Whether the badge should be styled as an info badge (blue) */
    info?: boolean;
}

/** The capitalized names of the fields */
export const {{constantCase name}}_BADGE_FIELD_NAMES = {
    {{#each fields}}
    {{camelCase name}}: "{{capitalCase name}}",
    {{/each}}
};

/** Shows a {{capitalCase name}} badge */
export function {{pascalCase name}}Badge(
    props: I{{pascalCase name}}BadgeProps
) {
    const valueClassname = classNames(
        "text-white px-2 py-1 rounded-r-lg",
        {
            "bg-red-500": props.danger,
            "bg-yellow-500": props.warning,
            "bg-blue-500": props.info,
            "bg-green-500": !props.danger && !props.warning && !props.info
        }
    );
    return (
        <div className="flex flex-row justify-start items-center">
            <div className="bg-gray-600 text-white px-2 py-1 rounded-l-lg">
                { {{constantCase name}}_BADGE_FIELD_NAMES[props.field] }
            </div>
            <div className={valueClassname}>
                {props.value[props.field]}
            </div>
        </div>
    );
}